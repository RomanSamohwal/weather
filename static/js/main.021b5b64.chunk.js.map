{"version":3,"sources":["api/api-city.ts","bll/app-reducer.ts","bll/cities-reducer.ts","api/api-weater.ts","utils/formWeatherObj.ts","bll/weather-reducer.ts","components/button/Bytton.tsx","components/card/Cards.tsx","features/weathers/WeathersDisplayContainer.tsx","components/temperature/TemperatureInfo.tsx","features/temperature/Temperatures.tsx","utils/maxMinTemperature.ts","features/search/InputSearch.tsx","features/search/SearchComponent.tsx","components/error/ErrorSnackbar.tsx","common/progress/Loading.tsx","features/update/UpdateAll.tsx","features/update/useInterval.tsx","features/update/Settings.tsx","app/App.tsx","utils/localStorage.ts","reportWebVitals.ts","bll/store.ts","index.tsx","common/css/Common.module.css","features/search/Search.module.css"],"names":["instance","axios","create","baseURL","ApiCity","getCity","city","a","get","response","console","log","data","_embedded","slice","createSlice","name","initialState","status","error","isInitialized","reducers","setAppError","state","action","payload","setAppStatus","appReducer","reducer","actions","fetchSearchCities","createAsyncThunk","thunkAPI","dispatch","String","rejectWithValue","trackCities","searchCities","addCity","find","e","cityId","unshift","addTrackCities","cities","deleteCity","index","findIndex","i","id","splice","extraReducers","builder","addCase","fulfilled","citiesReducer","API_KEY","ApiWeather","getWeatherCheckedCity","getUpdatedWeatherCheckedCity","updateCheckedWeatherCityAll","Promise","all","map","formWeatherObj","params","temp","convertTemp","main","temp_max","temp_min","humidity","pressure","convertPressure","icon","weather","wind","speed","deg","date","formDate","Date","toLocaleString","year","month","day","timezone","hour","minute","second","Math","round","press","updateWeatherAll","param","getState","weathers","w","reduce","ac","updateWeather","fetchWeather","addWeathers","deleteCityWeather","undefined","weathersReducer","ButtonComponent","React","memo","props","Button","onClick","onClickHandler","type","variant","color","title","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","duration","shortest","expandOpen","avatar","backgroundColor","red","RecipeReviewCard","classes","useDispatch","Card","className","style","margin","CardHeader","CardContent","Typography","component","src","CardActions","disableSpacing","container","justifyContent","WeathersDisplayContainer","Grid","spacing","display","flexWrap","length","TemperatureInfo","minWidth","Temperatures","arr_max_min","useMemo","obj","arr","Object","values","max","apply","value","min","t","MaxMinTemperature","InputSearch","Input","placeholder","onChange","onHandlerSearch","onSearchHandler","Paper","suggestion","flag","citesNewArray","SearchComponent","useSelector","useState","setValue","setFlag","onAutocompleteHandler","useCallback","matching_alternate_names","matching_full_name","currentTarget","trim","width","Alert","elevation","ErrorSnackbar","app","handleClose","event","reason","isOpen","Snackbar","open","autoHideDuration","onClose","severity","backdrop","zIndex","drawer","SimpleBackdrop","Backdrop","CircularProgress","UpdateAllComponent","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","Settings","changeFlag","Checkbox","checked","App","firstLoading","setFirstLoading","localStorage","getItem","JSON","parse","setItem","stringify","saveWeathers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.021b5b64.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.teleport.org/api/cities/'\r\n})\r\n\r\nexport const ApiCity = {\r\n    getCity: async (city: string) => {\r\n        const response = await instance.get<responseCities>(`?search=${city}&limit=5`);\r\n        console.log(response)\r\n        return response.data._embedded['city:search-results']\r\n    }\r\n}\r\n\r\n//types\r\ntype responseCities = {\r\n    _embedded: citySearchResults\r\n}\r\n\r\ntype citySearchResults = {\r\n    'city:search-results': Array<City>\r\n}\r\n\r\nexport type City = {\r\n    matching_alternate_names: Array<MatchingAlterNames>,\r\n    matching_full_name: string\r\n}\r\n\r\nexport type MatchingAlterNames = {\r\n    name: string\r\n}","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\nconst slice = createSlice({\r\n    name: 'app',\r\n    initialState: {\r\n        status: 'idle',\r\n        error: null,\r\n        isInitialized: false,\r\n\r\n    } as InitialStateType,\r\n    reducers: {\r\n        setAppError(state, action: PayloadAction<{ error: string | null }>) {\r\n            state.error = action.payload.error\r\n        },\r\n        setAppStatus(state, action: PayloadAction<{ status: RequestStatusType }>) {\r\n            state.status = action.payload.status\r\n        }\r\n    }\r\n})\r\n\r\nexport const appReducer = slice.reducer\r\nexport const {setAppError, setAppStatus} = slice.actions\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nexport type InitialStateType = {\r\n    status: RequestStatusType\r\n    error: string | null\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {ApiCity} from '../api/api-city';\r\nimport {setAppError} from './app-reducer';\r\n\r\nexport const fetchSearchCities = createAsyncThunk(\r\n    'cites/fetchCities',\r\n    async (city: string, thunkAPI) => {\r\n        try {\r\n            return await ApiCity.getCity(city)\r\n        } catch (e) {\r\n            thunkAPI.dispatch(setAppError({error: String(e)}))\r\n            return thunkAPI.rejectWithValue(null)\r\n        }\r\n    });\r\n\r\n\r\nconst slice = createSlice({\r\n        name: 'cites',\r\n        initialState: {\r\n            trackCities: [] as Array<number>,\r\n            searchCities: []\r\n        },\r\n        reducers: {\r\n            addCity(state,  action: PayloadAction<{ cityId: number }>) {\r\n                let findCity = state.trackCities.find(e => e === action.payload.cityId)\r\n                if (!findCity) {\r\n                    state.trackCities.unshift(action.payload.cityId)\r\n                }\r\n            },\r\n            addTrackCities(state, action: PayloadAction<{ cities: Array<number> }>) {\r\n                state.trackCities = action.payload.cities\r\n            },\r\n            // @ts-ignore\r\n            deleteCity(state, action: PayloadAction<{ id: number }>) {\r\n                let index = state.trackCities.findIndex( i => i === action.payload.id)\r\n                state.trackCities.splice(index, 1);\r\n            }\r\n        },\r\n        extraReducers: builder => {\r\n            builder.addCase(fetchSearchCities.fulfilled, (state, action) => {\r\n                // @ts-ignore\r\n                state.searchCities = action.payload\r\n            })\r\n        }\r\n    }\r\n)\r\n\r\nexport const citiesReducer = slice.reducer\r\nexport const {addCity, addTrackCities, deleteCity} = slice.actions\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = 'f49f252e14653d371d0e45f5c7398f20';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.openweathermap.org/',\r\n})\r\n\r\nexport const ApiWeather = {\r\n    getWeatherCheckedCity: async (city: string) => {\r\n        return await instance.get<Data>(`data/2.5/weather?q=${city}&appid=${API_KEY}`)\r\n    },\r\n\r\n    getUpdatedWeatherCheckedCity: async (id: number) => {\r\n        return await instance.get<Data>(`data/2.5/weather?id=${id}&appid=${API_KEY}`);\r\n    },\r\n\r\n    updateCheckedWeatherCityAll: async (cities: Array<number>) => {\r\n        return await Promise.all(cities.map(id => {\r\n            return instance.get<Data>(`data/2.5/weather?id=${id}&appid=${API_KEY}`)\r\n        }))\r\n    }\r\n}\r\n\r\n//types\r\nexport type Data = {\r\n    base: string\r\n    clouds: { all: number }\r\n    cod: number\r\n    coord: { lat: number, lon: number }\r\n    dt: number\r\n    id: number\r\n    main: Main\r\n    sys: Sys\r\n    name: string\r\n    timezone: number\r\n    visibility: number\r\n    weather: Array<Weather>\r\n    wind: Wind\r\n}\r\n\r\nexport type Weather = {\r\n    id: number\r\n    main: string\r\n    description: string\r\n    icon: string\r\n}\r\n\r\nexport type Main = {\r\n    feels_like: number\r\n    humidity: number\r\n    pressure: number\r\n    temp: number\r\n    temp_max: number\r\n    temp_min: number\r\n}\r\n\r\ntype Sys = {\r\n    country: string\r\n    id: number\r\n    sunrise: number\r\n    sunset: number\r\n    type: number\r\n}\r\n\r\ntype Wind = {\r\n    deg: number\r\n    gust: number\r\n    speed: number\r\n}","import {WeatherObj} from '../bll/weather-reducer';\r\n\r\nexport const formWeatherObj = (params: any, city: string): WeatherObj => {\r\n    return {\r\n        id: params.data.id,\r\n        name: city,\r\n        temp: convertTemp(params.data.main.temp),\r\n        temp_max: convertTemp(params.data.main.temp_max),\r\n        temp_min: convertTemp(params.data.main.temp_min),\r\n        humidity: params.data.main.humidity,\r\n        pressure: convertPressure(params.data.main.pressure),\r\n        icon: params.data.weather[0].icon,\r\n        wind: params.data.wind.speed,\r\n        deg: params.data.wind.deg,\r\n        date: formDate()\r\n    }\r\n}\r\n\r\nexport const formDate = () => {\r\n    let date = new Date();\r\n\r\n    let options = {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        timezone: 'UTC',\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        second: 'numeric'\r\n    };\r\n    // @ts-ignore\r\n    return  date.toLocaleString('ru', options)\r\n}\r\n\r\nconst convertTemp = (temp: number) => {\r\n    return Math.round(temp - 273)\r\n}\r\n\r\nconst convertPressure = (press: number) => {\r\n    return Math.round(press * 0.00750063755419211 * 100)\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {ApiWeather} from '../api/api-weater';\r\nimport {addCity} from './cities-reducer';\r\nimport {formWeatherObj} from '../utils/formWeatherObj';\r\nimport {setAppError, setAppStatus} from './app-reducer';\r\n\r\nexport const updateWeatherAll = createAsyncThunk(\r\n    'weathers/updateWeatherAll',\r\n    async (param  ,thunkAPI) => {\r\n        try {\r\n            const state = thunkAPI.getState()\r\n            thunkAPI.dispatch(setAppStatus({status: 'loading'}))\r\n            // @ts-ignore\r\n            const response = await ApiWeather.updateCheckedWeatherCityAll(state['cities'].trackCities)\r\n            thunkAPI.dispatch(setAppStatus({status: 'succeeded'}))\r\n            // @ts-ignore\r\n            const weathers =  response.map(w => formWeatherObj(w, state['weathers'][w.data.id].name)).\r\n            reduce((ac: WeathersType, w) => {\r\n                ac[w.id] = w\r\n                return ac }, {})\r\n            return {weathers}\r\n        } catch (e) {\r\n            thunkAPI.dispatch(setAppStatus({status: 'failed'}))\r\n            thunkAPI.dispatch(setAppError({error: String(e)}))\r\n            return thunkAPI.rejectWithValue(null)\r\n        }\r\n    });\r\n\r\nexport const updateWeather = createAsyncThunk(\r\n    'weathers/updateWeather',\r\n    async ( param:{id: number, city: string}, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus({status: 'loading'}))\r\n            const response = await ApiWeather.getUpdatedWeatherCheckedCity(param.id)\r\n            thunkAPI.dispatch(setAppStatus({status: 'succeeded'}))\r\n            const weather = formWeatherObj(response, param.city)\r\n            return {weather}\r\n        } catch (e) {\r\n            thunkAPI.dispatch(setAppStatus({status: 'failed'}))\r\n            thunkAPI.dispatch(setAppError({error: String(e)}))\r\n            return thunkAPI.rejectWithValue(null)\r\n        }\r\n    });\r\n\r\nexport const fetchWeather = createAsyncThunk(\r\n    'weathers/fetchWeather',\r\n    async (city: string, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus({status: 'loading'}))\r\n            const response = await ApiWeather.getWeatherCheckedCity(city)\r\n            let  weather = formWeatherObj(response, city)\r\n            thunkAPI.dispatch(addCity({cityId: weather.id}))\r\n            thunkAPI.dispatch(setAppStatus({status: 'succeeded'}))\r\n            return {weather}\r\n        } catch (e) {\r\n            thunkAPI.dispatch(setAppStatus({status: 'failed'}))\r\n            thunkAPI.dispatch(setAppError({error: String(e)}))\r\n            return thunkAPI.rejectWithValue(null)\r\n        }\r\n    });\r\n\r\nconst slice = createSlice({\r\n    name: 'weathers',\r\n    initialState: {} as WeathersType,\r\n    reducers: {\r\n        addWeathers(state, action: PayloadAction<{ weathers: any }>) {\r\n            return action.payload.weathers\r\n        },\r\n        deleteCityWeather(state, action: PayloadAction<{ id: number }>) {\r\n            delete state[action.payload.id]\r\n        }\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(fetchWeather.fulfilled, (state, action) => {\r\n            // @ts-ignore\r\n            if(action.payload.weather !== undefined) {\r\n                    // @ts-ignore\r\n                    state[action.payload.weather.id] = action.payload.weather\r\n                }\r\n        })\r\n\r\n        builder.addCase(addCity, (state, action) => {\r\n            if (action.payload.cityId !== undefined) {\r\n                // @ts-ignore\r\n                state[action.payload.cityId] = {}\r\n            }\r\n        });\r\n\r\n        builder.addCase(updateWeather.fulfilled, (state, action) => {\r\n                // @ts-ignore\r\n                state[action.payload.weather.id] = action.payload.weather\r\n        });\r\n\r\n        builder.addCase(updateWeatherAll.fulfilled, (state, action) => {\r\n            // @ts-ignore\r\n            return action.payload.weathers\r\n        });\r\n    }\r\n})\r\n\r\nexport const weathersReducer = slice.reducer\r\nexport const {addWeathers, deleteCityWeather} = slice.actions\r\n\r\nexport type WeathersType = {\r\n  [key: string]: WeatherObj\r\n}\r\n\r\n//types\r\nexport type WeatherObj = {\r\n    id: number\r\n    name: string\r\n    temp: number\r\n    temp_min: number\r\n    temp_max: number\r\n    humidity: number\r\n    wind: number\r\n    deg: number\r\n    pressure: number\r\n    date: string\r\n    icon: string\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport const ButtonComponent = React.memo((props: any) => {\r\n    return <Button\r\n        onClick={props.onClickHandler}\r\n        type='button'\r\n        variant='contained'\r\n        color={props.color}>\r\n        {props.title}\r\n    </Button>\r\n})","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {red} from '@material-ui/core/colors';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport {ButtonComponent} from '../button/Bytton';\r\nimport {useDispatch} from 'react-redux';\r\nimport {deleteCityWeather, updateWeather} from '../../bll/weather-reducer';\r\nimport {deleteCity} from '../../bll/cities-reducer';\r\nimport style from '../../common/css/Common.module.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 420,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport const RecipeReviewCard = (props: any) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n\r\n    const onUpdateHandler = () => {\r\n        dispatch(updateWeather({id: props.data.id, city: props.data.name}))\r\n    }\r\n\r\n    const onDeleteHandler = () => {\r\n        dispatch(deleteCityWeather({id: props.data.id}))\r\n        dispatch(deleteCity({id: props.data.id}))\r\n    }\r\n    return (\r\n        <Card className={classes.root} style={{margin: '10px'}}>\r\n            <CardHeader\r\n                title={props.data.name}\r\n            />\r\n            <CardContent>\r\n                <Typography variant='body2' color='textSecondary' component='p'>\r\n                    Температура: <img\r\n                    src={`https://openweathermap.org/img/w/${props.data.icon}.png`}/> {props.data.temp} C°\r\n                </Typography>\r\n                <Typography variant='body2' color='textSecondary' component='p'>\r\n                    Влажность : {props.data.humidity}%\r\n                </Typography>\r\n                <Typography variant='body2' color='textSecondary' component='p'>\r\n                    Атмосферное давление : {props.data.pressure} мм.рт.ст\r\n                </Typography>\r\n                <Typography variant='body2' color='textSecondary' component='p'>\r\n                    Сила и направление ветра : {props.data.wind} м/с <ArrowUpwardIcon\r\n                    style={{transform: `rotate(${props.data.deg}deg)`}}/>\r\n                </Typography>\r\n                <Typography variant='body2' color='textSecondary' component='p'>\r\n                    Последнее обновление данных :\r\n                </Typography>\r\n                <Typography variant='body2' color='textSecondary' component='p'>\r\n                    {props.data.date}\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <CardActions disableSpacing>\r\n                <div className={style.container}  style={{justifyContent: 'space-between'}}>\r\n                    <ButtonComponent onClickHandler={onDeleteHandler} title={'удалить'} color={'secondary'}/>\r\n                    <ButtonComponent onClickHandler={onUpdateHandler} title={'обновить'} color={'primary'}/>\r\n                </div>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}","import React from 'react'\r\nimport {RecipeReviewCard} from '../../components/card/Cards';\r\nimport {Grid} from '@material-ui/core';\r\n\r\nexport const WeathersDisplayContainer = React.memo((props : any) => {\r\n\r\n    return <Grid container spacing={3} style={{display: 'flex', justifyContent: 'center', flexWrap : 'wrap'}}>\r\n        {props.cities.length > 0 ? props.cities.map((id: number) => <RecipeReviewCard data={props.weathers[id]}\r\n                                                                                      key={id}/>)\r\n                                 : ''}\r\n    </Grid>\r\n})\r\n","import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport const TemperatureInfo = (props: any) => {\r\n    return <Card style={{margin: '10px', minWidth: '20vw', display: 'flex', justifyContent: 'center'}}>\r\n        <CardContent>\r\n            <Typography variant='body2' color='textSecondary' component='p'>\r\n                {props.name}\r\n            </Typography>\r\n            <Typography variant='body2' color='textSecondary' component='p'>\r\n                {props.title} : {props.temp} C°\r\n            </Typography>\r\n        </CardContent>\r\n    </Card>\r\n}\r\n\r\n","import React, {useMemo} from 'react'\r\nimport {TemperatureInfo} from '../../components/temperature/TemperatureInfo'\r\nimport {MaxMinTemperature} from '../../utils/maxMinTemperature'\r\nimport style from '../../common/css/Common.module.css'\r\n\r\nexport const Temperatures = React.memo((props: any) => {\r\n\r\n    const arr_max_min = useMemo(() => {\r\n        return MaxMinTemperature(props.weathers)\r\n    }, [props.weathers])\r\n\r\n    return <div className={style.container}>\r\n        {arr_max_min[0]!== undefined && arr_max_min.length > 0 ?\r\n             <><TemperatureInfo name={arr_max_min[0]?.name}\r\n                                temp={arr_max_min[0]?.temp_max}\r\n                                title={'максимальная'}/>\r\n               <TemperatureInfo name={arr_max_min[1]?.name}\r\n                                temp={arr_max_min[1]?.temp_max}\r\n                                title={'минимальная'}/></>\r\n                                                               :\r\n            ''}\r\n    </div>\r\n})","import {WeathersType, WeatherObj} from '../bll/weather-reducer';\r\n\r\nexport const MaxMinTemperature = (obj: WeathersType) => {\r\n\r\n    let arr = Object.values(obj)\r\n    let max = Math.max.apply(null, arr.map((value: WeatherObj) => {\r\n        return value.temp_max\r\n    }))\r\n    let min = Math.min.apply(null, arr.map((value: WeatherObj) => {\r\n        return value.temp_min\r\n    }))\r\n    return [arr.find((t: WeatherObj) => t.temp_max === max),\r\n            arr.find((t: WeatherObj) => t.temp_min === min)]\r\n}","import React from 'react';\r\nimport style from './Search.module.css';\r\nimport {Input, Paper} from '@material-ui/core';\r\nimport {ButtonComponent} from '../../components/button/Bytton';\r\n\r\nexport const InputSearch = React.memo((props: any) => {\r\n    return <div className={style.container}>\r\n        <Input type='text' placeholder={'введите город'} onChange={props.onHandlerSearch} value={props.value}\r\n               style={{margin: '10px'}}/>\r\n        <ButtonComponent onClickHandler={props.onSearchHandler} title={'добавить'} color={'primary'}/>\r\n        <Paper className={style.suggestion}>\r\n            {props.flag ? props.citesNewArray : null}\r\n        </Paper>\r\n    </div>\r\n})","import React, {ChangeEvent, useCallback, useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {fetchSearchCities} from '../../bll/cities-reducer';\r\nimport {AppRootStateType} from '../../bll/store';\r\nimport {City, MatchingAlterNames} from '../../api/api-city';\r\nimport {fetchWeather} from '../../bll/weather-reducer';\r\nimport {InputSearch} from './InputSearch';\r\n\r\nexport const SearchComponent = (props: any) => {\r\n\r\n    let searchCities: any = useSelector<AppRootStateType>(state => state.cities.searchCities)\r\n\r\n    const [value, setValue] = useState('')\r\n    const [flag, setFlag] = useState(false)\r\n\r\n    const onAutocompleteHandler = useCallback((city: MatchingAlterNames) => {\r\n            setValue(city?.name)\r\n            setFlag(false)\r\n    }, [value, flag])\r\n\r\n    const onSearchHandler = useCallback(() => {\r\n        if (value !== '') {\r\n            props.dispatch(fetchWeather(value))\r\n            setValue('')\r\n        }\r\n    }, [value, flag])\r\n\r\n    const citesNewArray = searchCities.map((city: City) => <div\r\n        onClick={() => {\r\n            onAutocompleteHandler(city.matching_alternate_names[0])\r\n        }}\r\n        key={city.matching_full_name}>\r\n        {city.matching_full_name} </div>)\r\n\r\n    const onHandlerSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value.trim())\r\n        if (e.currentTarget.value.length >= 3) {\r\n            props.dispatch(fetchSearchCities(e.currentTarget.value))\r\n            setFlag(true)\r\n        } else {\r\n            setFlag(false)\r\n        }\r\n    }, [value, flag])\r\n\r\n    return <div style={{width: '100vw', display: 'flex', justifyContent: 'center'}}>\r\n        <div>\r\n            <InputSearch value={value} onHandlerSearch={onHandlerSearch}\r\n                         citesNewArray={citesNewArray} flag={flag}\r\n                         onSearchHandler={onSearchHandler}/>\r\n        </div>\r\n    </div>\r\n}\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from \"../../bll/store\";\r\nimport { setAppError } from '../../bll/app-reducer';\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport function ErrorSnackbar() {\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppError({error: null}));\r\n    }\r\n\r\n\r\n    const isOpen = error !== null;\r\n\r\n    return (\r\n        <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function SimpleBackdrop() {\r\n    const classes = useStyles();\r\n    const [open] = React.useState(true);\r\n\r\n    return (<Backdrop className={classes.backdrop} open={open}>\r\n            <CircularProgress color=\"inherit\"/>\r\n        </Backdrop>\r\n    );\r\n}","import React from 'react';\r\nimport {updateWeatherAll} from '../../bll/weather-reducer';\r\nimport {useInterval} from './useInterval';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nexport const UpdateAllComponent = (props: any) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const onUpdateAllHandler = () => {\r\n        dispatch(updateWeatherAll())\r\n    }\r\n    useInterval(onUpdateAllHandler, 3)\r\n\r\n    return <></>\r\n}\r\n\r\n\r\n","import {useEffect, useRef} from \"react\";\r\n\r\nexport function useInterval(callback: any, delay : any) {\r\n    const savedCallback = useRef();\r\n\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n        function tick() {\r\n            // @ts-ignore\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay * 1000);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}\r\n","import React, {useCallback} from 'react';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport {UpdateAllComponent} from './UpdateAll';\r\nimport style from '../../common/css/Common.module.css'\r\n\r\nexport const Settings = React.memo((props: any) => {\r\n\r\n    const onClickHandler = useCallback(() => {\r\n        props.changeFlag()\r\n    }, [props.changeFlag])\r\n\r\n    return <div style={{width: '100vw'}} className={style.container}>\r\n        <div>автообновление 5с <Checkbox onClick={onClickHandler} checked={props.flag}/></div>\r\n        {props.flag && <UpdateAllComponent/>}\r\n    </div>\r\n})\r\n","import React, {useEffect, useState} from 'react';\nimport {restoreCities, restoreWeathers, saveCities, saveWeathers} from '../utils/localStorage';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {addTrackCities} from '../bll/cities-reducer';\nimport {addWeathers, updateWeatherAll, WeathersType} from '../bll/weather-reducer';\nimport {WeathersDisplayContainer} from '../features/weathers/WeathersDisplayContainer';\nimport {Temperatures} from '../features/temperature/Temperatures';\nimport {AppRootStateType} from '../bll/store';\nimport {SearchComponent} from '../features/search/SearchComponent';\nimport {ErrorSnackbar} from '../components/error/ErrorSnackbar';\nimport SimpleBackdrop from '../common/progress/Loading';\nimport {Settings} from '../features/update/Settings';\n\nfunction App() {\n\n    let weathers: WeathersType | any = useSelector<AppRootStateType>(state => state.weathers)\n    let cities: Array<number> | any = useSelector<AppRootStateType>(state => state.cities.trackCities)\n    let error = useSelector<AppRootStateType>(state => state.app.error)\n    let status = useSelector<AppRootStateType>(state => state.app.status)\n\n    const dispatch = useDispatch()\n    const [firstLoading, setFirstLoading] = useState(true)\n    const [flag, setFlag] = useState(false)\n\n    useEffect(() => {\n        if (firstLoading) {\n            dispatch(addTrackCities({cities: restoreCities()}))\n            dispatch(addWeathers({weathers: restoreWeathers()}))\n            dispatch(updateWeatherAll())\n            setFirstLoading(false)\n        }\n    }, [firstLoading, dispatch])\n\n    useEffect(() => {\n        if (!firstLoading) {\n            saveCities(cities)\n            saveWeathers(weathers)\n        }\n    }, [cities, weathers])\n\n    if (status === 'loading') {\n        return <SimpleBackdrop/>\n    }\n\n    const changeFlag = () => {\n        setFlag(!flag)\n    }\n\n    return <>\n        <Temperatures weathers={weathers}/>\n        <SearchComponent dispatch={dispatch}/>\n        <Settings changeFlag={changeFlag} flag={flag}/>\n        <WeathersDisplayContainer cities={cities} weathers={weathers}/>\n        {error && <ErrorSnackbar/>}\n    </>\n}\n\nexport default App;\n","export const saveCities = (state: any) => {\r\n    localStorage.setItem('cities', JSON.stringify(state));\r\n};\r\n\r\nexport const saveWeathers = (state: any) => {\r\n    localStorage.setItem('weathers', JSON.stringify(state));\r\n};\r\n\r\nexport const restoreCities =  () => {\r\n    if (localStorage.getItem('cities') === null) {\r\n        return []\r\n    } else {\r\n        return JSON.parse(<string>localStorage.getItem('cities'))\r\n    }\r\n};\r\n\r\nexport const restoreWeathers =  () => {\r\n    if (localStorage.getItem('weathers') === null) {\r\n        return {}\r\n    } else {\r\n        return JSON.parse(<string>localStorage.getItem('weathers'))\r\n    }\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, configureStore} from '@reduxjs/toolkit';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from './app-reducer';\r\nimport { citiesReducer } from './cities-reducer';\r\nimport {weathersReducer} from './weather-reducer';\r\n\r\n\r\nconst rootReducer = combineReducers(\r\n    {\r\n        app: appReducer,\r\n        weathers: weathersReducer,\r\n        cities: citiesReducer\r\n    }\r\n)\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r\n})\r\n\r\nexport type RootReducerType = typeof rootReducer\r\nexport type AppRootStateType = ReturnType<RootReducerType>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Common_container__3lNRX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__1HmFE\",\"suggestion\":\"Search_suggestion__3tqjF\"};"],"sourceRoot":""}